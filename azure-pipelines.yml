stages:
  - stage: package
    displayName: Prepare & Bundle Sources
    jobs:
      - job: package
        displayName: Prepare & Bundle Sources
        steps:
          - checkout: self
            fetchDepth: 5
            submodules: true
          - bash: |
              set -eux

              # For compatibility between branch and PR builds.
              # $REVISION will always point at the tip of the tested branch.
              REVISION="${SYSTEM_PULLREQUEST_SOURCECOMMITID:-$BUILD_SOURCEVERSION}"
              bash bin/package.sh "$REVISION"

          - publish: out
            artifact: sources

  - stage: test
    dependsOn: package
    displayName: Build & Test

    jobs:

      - job: linux
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: sources
              path: $(System.DefaultWorkingDirectory)

          - script: |
              mkdir -p build && cd build
              cmake ..
              cmake --build . --parallel
            displayName: Build
          - script: ./build/sentry_tests
            displayName: Test

      - job: macos
        pool:
          vmImage: "macOs-latest"
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: sources
              path: $(System.DefaultWorkingDirectory)
          - script: |
              mkdir -p build && cd build
              cmake ..
              cmake --build . --parallel
            displayName: Build
          - script: ./build/sentry_tests
            displayName: Test

      # - job: windows
      #   pool:
      #     vmImage: "windows-latest"
      #   steps:
      #     - checkout: none
      #     - task: DownloadPipelineArtifact@2
      #       inputs:
      #         artifact: sources
      #         path: $(System.DefaultWorkingDirectory)
      #     - bash: |
      #         ls

      # - job: android
      #   pool:
      #     vmImage: "ubuntu-latest"
      #   steps:
      #     - checkout: none
      #     - task: DownloadPipelineArtifact@2
      #       inputs:
      #         artifact: sources
      #         path: $(System.DefaultWorkingDirectory)
      #     - bash: |
      #         ls
